package translations

import (
	. "github.com/mjarkk/laravalidate"
	"golang.org/x/text/language"
)

func RegisterEsTranslations() {
	RegisterMessages(language.Spanish, map[string]MessageResolver{
		"accepted": BasicMessageResolver("El campo :attribute debe ser aceptado."),
		// "accepted_if": BasicMessageResolver("El campo :attribute debe ser aceptado cuando :other es :value."),
		"active_url":     BasicMessageResolver("El campo :attribute debe ser una URL válida."),
		"after":          BasicMessageResolver("El campo :attribute debe ser una fecha posterior a :date."),
		"after_or_equal": BasicMessageResolver("El campo :attribute debe ser una fecha posterior o igual a :date."),
		"alpha":          BasicMessageResolver("El campo :attribute solo debe contener letras."),
		"alpha_dash":     BasicMessageResolver("El campo :attribute solo debe contener letras, números, guiones y guiones bajos."),
		"alpha_numeric":  BasicMessageResolver("El campo :attribute solo debe contener letras y números."),
		// "array":     BasicMessageResolver("El campo :attribute debe ser un arreglo."),
		"ascii":           BasicMessageResolver("El campo :attribute solo debe contener caracteres alfanuméricos de un solo byte y símbolos."),
		"bail":            BasicMessageResolver("El campo :attribute debe pasar."),
		"before":          BasicMessageResolver("El campo :attribute debe ser una fecha anterior a :date."),
		"before_or_equal": BasicMessageResolver("El campo :attribute debe ser una fecha anterior o igual a :date."),
		"between": MessageHintResolver{
			Fallback: "El campo :attribute debe estar entre :arg0 y :arg1.",
			Hints: map[string]string{
				"array":   "El campo :attribute debe tener entre :arg0 y :arg1 elementos.",
				"file":    "El campo :attribute debe estar entre :arg0 y :arg1 kilobytes.",
				"numeric": "El campo :attribute debe estar entre :arg0 y :arg1.",
				"string":  "El campo :attribute debe estar entre :arg0 y :arg1 caracteres.",
			},
		},
		"boolean": BasicMessageResolver("El campo :attribute debe ser verdadero o falso."),
		// "can": BasicMessageResolver("El campo :attribute contiene un valor no autorizado."),
		"confirmed": BasicMessageResolver("La confirmación del campo :attribute no coincide."),
		// "contains":  BasicMessageResolver("El campo :attribute falta un valor requerido."),
		// "current_password": BasicMessageResolver("La contraseña es incorrecta."),
		"date": BasicMessageResolver("El campo :attribute debe ser una fecha válida."),
		// "date_equals": BasicMessageResolver("El campo :attribute debe ser una fecha igual a :date."),
		"date_format": BasicMessageResolver("El campo :attribute debe coincidir con el formato :arg."),
		// "decimal": BasicMessageResolver("El campo :attribute debe tener :arg decimales."),
		"declined": BasicMessageResolver("El campo :attribute debe ser rechazado."),
		// "declined_if": BasicMessageResolver("El campo :attribute debe ser rechazado cuando :other es :value."),
		// "different":   BasicMessageResolver("El campo :attribute y :other deben ser diferentes."),
		"digits":         BasicMessageResolver("El campo :attribute debe tener :digits dígitos."),
		"digits_between": BasicMessageResolver("El campo :attribute debe tener entre :arg0 y :arg1 dígitos."),
		// "dimensions":        BasicMessageResolver("El campo :attribute tiene dimensiones de imagen inválidas."),
		// "distinct":          BasicMessageResolver("El campo :attribute tiene un valor duplicado."),
		// "doesnt_end_with":   BasicMessageResolver("El campo :attribute no debe terminar con uno de los siguientes: :args."),
		// "doesnt_start_with": BasicMessageResolver("El campo :attribute no debe comenzar con uno de los siguientes: :args."),
		"email":     BasicMessageResolver("El campo :attribute debe ser una dirección de correo electrónico válida."),
		"ends_with": BasicMessageResolver("El campo :attribute debe terminar con uno de los siguientes: :args."),
		// "enum":    BasicMessageResolver("El :attribute seleccionado es inválido."),
		"exists":     BasicMessageResolver("El :attribute seleccionado es inválido."),
		"extensions": BasicMessageResolver("El campo :attribute debe tener una de las siguientes extensiones: :args."),
		// "file":       BasicMessageResolver("El campo :attribute debe ser un archivo."),
		"filled": BasicMessageResolver("El campo :attribute debe tener un valor."),
		// "gt": MessageHintResolver{Hints: map[string]string{
		// 	"array":   "El campo :attribute debe tener más de :value elementos.",
		// 	"file":    "El campo :attribute debe ser mayor que :value kilobytes.",
		// 	"numeric": "El campo :attribute debe ser mayor que :value.",
		// 	"string":  "El campo :attribute debe ser mayor que :value caracteres.",
		// }},
		// "gte": MessageHintResolver{Hints: map[string]string{
		// 	"array":   "El campo :attribute debe tener :value elementos o más.",
		// 	"file":    "El campo :attribute debe ser mayor o igual que :value kilobytes.",
		// 	"numeric": "El campo :attribute debe ser mayor o igual que :value.",
		// 	"string":  "El campo :attribute debe ser mayor o igual que :value caracteres.",
		// }},
		"hex_color": BasicMessageResolver("El campo :attribute debe ser un color hexadecimal válido."),
		// "image":     BasicMessageResolver("El campo :attribute debe ser una imagen."),
		"in": BasicMessageResolver("El :attribute seleccionado es inválido."),
		// "in_array":  BasicMessageResolver("El campo :attribute debe existir en :other."),
		// "integer":   BasicMessageResolver("El campo :attribute debe ser un entero."),
		"ip":   BasicMessageResolver("El campo :attribute debe ser una dirección IP válida."),
		"ipv4": BasicMessageResolver("El campo :attribute debe ser una dirección IPv4 válida."),
		"ipv6": BasicMessageResolver("El campo :attribute debe ser una dirección IPv6 válida."),
		"json": BasicMessageResolver("El campo :attribute debe ser una cadena JSON válida."),
		// "list":      BasicMessageResolver("El campo :attribute debe ser una lista."),
		"lowercase": BasicMessageResolver("El campo :attribute debe ser en minúsculas."),
		// "lt": MessageHintResolver{Hints: map[string]string{
		// 	"array":   "El campo :attribute debe tener menos de :value elementos.",
		// 	"file":    "El campo :attribute debe ser menor que :value kilobytes.",
		// 	"numeric": "El campo :attribute debe ser menor que :value.",
		// 	"string":  "El campo :attribute debe ser menor que :value caracteres.",
		// }},
		// "lte": MessageHintResolver{Hints: map[string]string{
		// 	"array":   "El campo :attribute no debe tener más de :value elementos.",
		// 	"file":    "El campo :attribute debe ser menor o igual que :value kilobytes.",
		// 	"numeric": "El campo :attribute debe ser menor o igual que :value.",
		// 	"string":  "El campo :attribute debe ser menor o igual que :value caracteres.",
		// }},
		"mac_address": BasicMessageResolver("El campo :attribute debe ser una dirección MAC válida."),
		"max": MessageHintResolver{
			Fallback: "El campo :attribute no debe ser mayor que :arg.",
			Hints: map[string]string{
				"array":   "El campo :attribute no debe tener más de :arg elementos.",
				"file":    "El campo :attribute no debe ser mayor que :arg kilobytes.",
				"numeric": "El campo :attribute no debe ser mayor que :arg.",
				"string":  "El campo :attribute no debe ser mayor que :arg caracteres.",
			},
		},
		"max_digits": BasicMessageResolver("El campo :attribute no debe tener más de :max dígitos."),
		"mimes":      BasicMessageResolver("El campo :attribute debe ser un archivo de tipo: :args."),
		"mimetypes":  BasicMessageResolver("El campo :attribute debe ser un archivo de tipo: :args."),
		"min": MessageHintResolver{
			Fallback: "El campo :attribute debe ser al menos :arg.",
			Hints: map[string]string{
				"array":   "El campo :attribute debe tener al menos :arg elementos.",
				"file":    "El campo :attribute debe ser al menos :arg kilobytes.",
				"numeric": "El campo :attribute debe ser al menos :arg.",
				"string":  "El campo :attribute debe ser al menos :arg caracteres.",
			},
		},
		"min_digits": BasicMessageResolver("El campo :attribute debe tener al menos :arg dígitos."),
		// "missing":          BasicMessageResolver("El campo :attribute debe estar ausente."),
		// "missing_if":       BasicMessageResolver("El campo :attribute debe estar ausente cuando :other es :value."),
		// "missing_unless":   BasicMessageResolver("El campo :attribute debe estar ausente a menos que :other sea :value."),
		// "missing_with":     BasicMessageResolver("El campo :attribute debe estar ausente cuando :args está presente."),
		// "missing_with_all": BasicMessageResolver("El campo :attribute debe estar ausente cuando :args están presentes."),
		// "multiple_of":      BasicMessageResolver("El campo :attribute debe ser múltiplo de :value."),
		"not_nil":   BasicMessageResolver("El campo :attribute no debe ser nulo."),
		"not_in":    BasicMessageResolver("El :attribute seleccionado es inválido."),
		"not_regex": BasicMessageResolver("El formato del campo :attribute es inválido."),
		"numeric":   BasicMessageResolver("El campo :attribute debe ser un número."),
		// "password": MessageHintResolver{Hints: map[string]string{
		// 	"letters":       "El campo :attribute debe contener al menos una letra.",
		// 	"mixed":         "El campo :attribute debe contener al menos una letra mayúscula y una minúscula.",
		// 	"numbers":       "El campo :attribute debe contener al menos un número.",
		// 	"symbols":       "El campo :attribute debe contener al menos un símbolo.",
		// 	"uncompromised": "El :attribute dado ha aparecido en una filtración de datos. Por favor, elija un :attribute diferente.",
		// }},
		// "present":           BasicMessageResolver("El campo :attribute debe estar presente."),
		// "present_if":        BasicMessageResolver("El campo :attribute debe estar presente cuando :other es :value."),
		// "present_unless":    BasicMessageResolver("El campo :attribute debe estar presente a menos que :other sea :value."),
		// "present_with":      BasicMessageResolver("El campo :attribute debe estar presente cuando :args está presente."),
		// "present_with_all":  BasicMessageResolver("El campo :attribute debe estar presente cuando :args están presentes."),
		// "prohibited":        BasicMessageResolver("El campo :attribute está prohibido."),
		// "prohibited_if":     BasicMessageResolver("El campo :attribute está prohibido cuando :other es :value."),
		// "prohibited_unless": BasicMessageResolver("El campo :attribute está prohibido a menos que :other esté en :args."),
		// "prohibits":         BasicMessageResolver("El campo :attribute prohíbe que :other esté presente."),
		"regex":    BasicMessageResolver("El formato del campo :attribute es inválido."),
		"required": BasicMessageResolver("El campo :attribute es requerido."),
		// "required_array_keys":  BasicMessageResolver("El campo :attribute debe contener entradas para: :args."),
		// "required_if":          BasicMessageResolver("El campo :attribute es requerido cuando :other es :value."),
		// "required_if_accepted": BasicMessageResolver("El campo :attribute es requerido cuando :other es aceptado."),
		// "required_if_declined": BasicMessageResolver("El campo :attribute es requerido cuando :other es rechazado."),
		// "required_unless":      BasicMessageResolver("El campo :attribute es requerido a menos que :other esté en :args."),
		// "required_with":        BasicMessageResolver("El campo :attribute es requerido cuando :args está presente."),
		// "required_with_all":    BasicMessageResolver("El campo :attribute es requerido cuando :args están presentes."),
		// "required_without":     BasicMessageResolver("El campo :attribute es requerido cuando :args no está presente."),
		// "required_without_all": BasicMessageResolver("El campo :attribute es requerido cuando ninguno de :args están presentes."),
		// "same": BasicMessageResolver("El campo :attribute debe coincidir con :other."),
		"size": MessageHintResolver{
			Fallback: "El campo :attribute debe tener un tamaño de :arg.",
			Hints: map[string]string{
				"array":   "El campo :attribute debe contener :arg elementos.",
				"file":    "El campo :attribute debe ser :arg kilobytes.",
				"numeric": "El campo :attribute debe ser :arg.",
				"string":  "El campo :attribute debe ser :arg caracteres.",
			}},
		"starts_with": BasicMessageResolver("El campo :attribute debe comenzar con uno de los siguientes: :args."),
		// "string":   BasicMessageResolver("El campo :attribute debe ser una cadena."),
		// "timezone": BasicMessageResolver("El campo :attribute debe ser una zona horaria válida."),
		// "unique":   BasicMessageResolver("El :attribute ya ha sido tomado."),
		// "uploaded": BasicMessageResolver("El campo :attribute falló al subir."),
		"uppercase": BasicMessageResolver("El campo :attribute debe estar en mayúsculas."),
		"url":       BasicMessageResolver("El campo :attribute debe ser una URL válida."),
		"ulid":      BasicMessageResolver("El campo :attribute debe ser un ULID válido."),
		"uuid":      BasicMessageResolver("El campo :attribute debe ser un UUID válido."),
	})
}
